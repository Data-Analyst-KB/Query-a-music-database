# Query a ** Music Database**

For this project, I created 4 question from looking at a relational database diagram. After constructing those questions I used, the following SQL functions to show proficency with utlization.
Those fucntions included JOINS, Aggregate Functions, and the following clauses: WHERE, GROUP BY, ORDER BY, LIMIT, AND, and LIKE
See below for examples


## Question 1: Which top **25 Countries** have the highest invoice totals? --

### _SQL Query_:

'SELECT i.billingcountry, SUM(i.total) AS invoice_total, il.quantity
FROM invoice AS i
JOIN invoiceline AS il
ON i.invoiceid = il.invoiceid
GROUP BY 1, 3
ORDER BY 2 DESC
LIMIT 25;'



## Question 2: Which _US state_ had the highest paying customer? -- 

### _SQLQuery_: 

'SELECT i.billingstate, i.billingcountry, SUM(i.total) AS total_sales
FROM customer AS c
JOIN invoice AS i
ON c.customerid = i.customerid
WHERE c.country = 'USA' AND i.billingcountry LIKE '%USA%'
GROUP BY i.billingstate, i.billingcountry
ORDER BY 2, 3 DESC
LIMIT 10;'



## Questions 3: Which Genre was created the most and the least? --

### _SQL Query_:

'SELECT COUNT(DISTINCT trackid) as count_of_tracks, g.name
FROM track AS t
JOIN genre AS g
ON t.genreid = g.genreid
JOIN mediatype AS mt
ON t.mediatypeid = mt.mediatypeid
GROUP BY g.name
ORDER BY count_of_tracks ASC, g.name ASC
LIMIT 50;'



## Question 4: Name the titles, prices, composers, and genre of 1st 25 ablums that begin with the letter N --

### _SQL Query_:

'SELECT al.title, t.composer, SUM(t.unitprice) AS album_price, g.name
FROM artist AS ar
JOIN album AS al
ON ar.artistid = al.artistid
JOIN track AS t
ON al.albumid = t.albumid
JOIN genre AS g
ON t.genreid = g.genreid
WHERE al.title LIKE 'N%' AND composer IS NOT NULL
GROUP BY al.title, t.composer, g.name
ORDER BY 4 DESC
LIMIT 25;'

 
 
